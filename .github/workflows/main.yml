name: CI
on: [pull_request]

jobs:
  test-ubuntu:
    name: Test-ubuntu
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta, nightly]
    steps:
    - uses: actions/checkout@master
    - name: Install Rust (
      run: rustup update ${{ matrix.rust }} && rustup default ${{ matrix.rust }}
    - run: cargo test --features=checks --release
    - run: cargo run --release --features=checks --example hello

  test-macos:
    name: Test-macos
    runs-on: macos-latest
    strategy:
      matrix:
        rust: [stable, beta, nightly]
    steps:
    - uses: actions/checkout@master
    - name: Install Rust (
      run: rustup update ${{ matrix.rust }} && rustup default ${{ matrix.rust }}
    - run: cargo test --features=checks --release
    - run: cargo run --release --features=checks --example hello

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Install Rust
      run: rustup update stable && rustup default stable && rustup component add rustfmt
    - run: cargo fmt -- --check

  wasm:
    name: WebAssembly
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Install Rust
      run: rustup update stable && rustup default stable && rustup target add wasm32-unknown-unknown
    - run: cargo build --target wasm32-unknown-unknown
    - run: cargo build --target wasm32-unknown-unknown --release
